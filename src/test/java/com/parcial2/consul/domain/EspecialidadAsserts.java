package com.parcial2.consul.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EspecialidadAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEspecialidadAllPropertiesEquals(Especialidad expected, Especialidad actual) {
        assertEspecialidadAutoGeneratedPropertiesEquals(expected, actual);
        assertEspecialidadAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEspecialidadAllUpdatablePropertiesEquals(Especialidad expected, Especialidad actual) {
        assertEspecialidadUpdatableFieldsEquals(expected, actual);
        assertEspecialidadUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEspecialidadAutoGeneratedPropertiesEquals(Especialidad expected, Especialidad actual) {
        assertThat(actual)
            .as("Verify Especialidad auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEspecialidadUpdatableFieldsEquals(Especialidad expected, Especialidad actual) {
        assertThat(actual)
            .as("Verify Especialidad relevant properties")
            .satisfies(a -> assertThat(a.getNombre()).as("check nombre").isEqualTo(expected.getNombre()))
            .satisfies(a -> assertThat(a.getDescripcion()).as("check descripcion").isEqualTo(expected.getDescripcion()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEspecialidadUpdatableRelationshipsEquals(Especialidad expected, Especialidad actual) {
        assertThat(actual)
            .as("Verify Especialidad relationships")
            .satisfies(a -> assertThat(a.getMedicos()).as("check medicos").isEqualTo(expected.getMedicos()));
    }
}
