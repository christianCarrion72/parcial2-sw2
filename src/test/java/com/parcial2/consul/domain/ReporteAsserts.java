package com.parcial2.consul.domain;

import static com.parcial2.consul.domain.AssertUtils.zonedDataTimeSameInstant;
import static org.assertj.core.api.Assertions.assertThat;

public class ReporteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReporteAllPropertiesEquals(Reporte expected, Reporte actual) {
        assertReporteAutoGeneratedPropertiesEquals(expected, actual);
        assertReporteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReporteAllUpdatablePropertiesEquals(Reporte expected, Reporte actual) {
        assertReporteUpdatableFieldsEquals(expected, actual);
        assertReporteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReporteAutoGeneratedPropertiesEquals(Reporte expected, Reporte actual) {
        assertThat(actual)
            .as("Verify Reporte auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReporteUpdatableFieldsEquals(Reporte expected, Reporte actual) {
        assertThat(actual)
            .as("Verify Reporte relevant properties")
            .satisfies(a -> assertThat(a.getTipo()).as("check tipo").isEqualTo(expected.getTipo()))
            .satisfies(a ->
                assertThat(a.getFechaGeneracion())
                    .as("check fechaGeneracion")
                    .usingComparator(zonedDataTimeSameInstant)
                    .isEqualTo(expected.getFechaGeneracion())
            )
            .satisfies(a -> assertThat(a.getRutaArchivo()).as("check rutaArchivo").isEqualTo(expected.getRutaArchivo()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReporteUpdatableRelationshipsEquals(Reporte expected, Reporte actual) {
        // empty method
    }
}
